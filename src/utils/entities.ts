import { Entity } from '../patches/Entity.js'
import { IFullRef, TRef } from '../types.js'

const ENTITY_ID_PREFIX = 'faad'

if(ENTITY_ID_PREFIX.length > 6) throw new Error('ERR: the entity id prefix should be less than 7 characters to allow for more ids')

export const generateRandomHex = (size: number) => [...Array(size)].map(() => Math.floor(Math.random() * 16).toString(16)).join('')
export const generateRandomEntityID = () => ENTITY_ID_PREFIX + generateRandomHex(16 - ENTITY_ID_PREFIX.length)
export const generateRandomEntityName = () => "Generated by QES_" + generateRandomHex(16)

export function ensureID(entity: Entity | TRef | string) {
  if(entity instanceof Entity) return entity.id
  if(entity.hasOwnProperty('ref') && (entity as IFullRef).ref instanceof Entity) {
    return {
      ...(entity as IFullRef),
      ref: ((entity as IFullRef).ref as Entity).id,
    } satisfies IFullRef
  }
  return entity
}
